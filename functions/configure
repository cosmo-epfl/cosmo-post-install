#!/bin/bash

dir="$(dirname "$0")"
#if [[ "$RELEASE" == "Ubuntu" ]]; then
#    show_info "Using Ubuntu list of packages"
#    COSMOUTILS="$dir/data/cosmonas.list"
#else
#    show_info "Using Debian list of packages"
#    COSMOUTILS="$dir/data/cosmonas-debian.list"
#fi

# Preferred settings
function preferences {
    # Pantheon Settings
    show_info 'Setting Pantheon app preferences...'
    gsettings set org.pantheon.noise.settings update-folder-heirarchy false
    gsettings set org.pantheon.terminal.settings natural-copy-paste false
    # GNOME Preferences
    show_info 'Setting GNOME app preferences...'
    gsettings set org.gnome.desktop.interface clock-format 12h
    gsettings set org.gnome.desktop.interface clock-show-date true
    gsettings set org.gnome.nautilus.preferences sort-directories-first true
    gsettings set org.gtk.Settings.Debug enable-inspector-keybinding true
    # Done
    show_success 'Done.'
    whiptail --title "Finished" --msgbox "Settings changed successfully." 8 78
    configure
}

# Show start-up applications
function startup {
    show_info 'Changing display of startup applications...'
    show_warning 'Requires root privileges'
    $SUDOCMD sed -i "s/NoDisplay=true/NoDisplay=false/g" /etc/xdg/autostart/*.desktop
    # Done
    show_success 'Done.'
    whiptail --title "Finished" --msgbox "Settings changed successfully." 8 78
    configure
}

# Disable Apport
function apport {
    show_info 'Disabling apport crash dialogs...'
    show_warning 'Requires root privileges'
    $SUDOCMD sed -i "s/enabled=1/enabled=0/g" /etc/default/apport
    # Done
    show_success 'Done.'
    whiptail --title "Finished" --msgbox "Settings changed successfully." 8 78
    configure
}

# Setup shared home on the COSMO nas
function cosmonas {
    if (eval `resize` && whiptail --title \
        "Setup of remote HOMES and LDAP authentication" --yesno \
        #"List of applications needed for this operation: \n\n$(cat $COSMOUTILS) \n\nProceed?" \
        "Some applications might need to be installed, based on the OS\n\nProceed?" \
        $LINES $COLUMNS $(( $LINES - 12 )) \
        --scrolltext ) then
            # First, check if running Ubuntu or Debian
            if [[ "$RELEASE" == "Ubuntu" ]]; then
                COSMOUTILS="$dir/data/cosmonas.list"
            else
                COSMOUTILS="$dir/data/cosmonas-debian.list"
            fi
            show_info 'Installing... This will trigger an interactive setup of LDAP and Kerberos.'
            show_warning 'Requires root privileges'
            $SUDOCMD apt-get install -y --no-install-recommends $(cat $COSMOUTILS)
            show_success 'Installation done.'
            show_info 'Setting up LDAP auth files...'
            show_warning 'Requires root privileges'
            # File '/etc/ntp.conf'
            show_info 'File "ntp.conf"'
            echo "server 128.178.23.1" | $SUDOCMD tee -a /etc/ntp.conf
            # File '/etc/ldap.conf'
            show_info 'Configuring file "ldap.conf"'
            echo -e "timelimit 30\nbind_timelimit 30\nidle_timelimit 1200\nbind_policy soft\n nss_initgroups backlink\nnss_map_attribute uniqueMember memberUid\n" | $SUDOCMD tee -a /etc/ldap.conf
            IGNORE=`awk -F: '{printf ("%s,",$1)}' /etc/passwd`
            echo "nss_initgroups_ignoreusers ${IGNORE%,}" | $SUDOCMD tee -a /etc/ldap.conf
            # File '/etc/nsswitch.conf'
            show_info 'File "nsswitch.conf"'
            $SUDOCMD sed -i 's/compat/files ldap/' /etc/nsswitch.conf
            echo -e "automount: files\n" | $SUDOCMD tee -a /etc/nsswitch.conf
            # File '/etc/idmapd.conf'
            show_info 'File "idmapd.conf"'
            echo -e "Domain = INTRANET\nLocal-Realms = epfl@INTRANET,epfl,epfl.ch\n" | $SUDOCMD tee -a /etc/idmapd.conf
            # File '/etc/nslcd.conf'
            show_info 'Configure nscd daemon'
            echo -e "bind_timelimit 30\ntimelimit 30\nidle_timelimit 1200" | $SUDOCMD tee -a /etc/nslcd.conf
            $SUDOCMD service nscd restart
            # Enabling login from other users
            show_info 'Enabling login from other users'
            echo -e "[SeatDefaults]\ngreeter-show-manual-login=true\ngreeter-hide-users=true" | $SUDOCMD tee /etc/lightdm/lightdm.conf
            # Done with LDAP
            show_success 'Done with LDAP.'

            # Setup autofs
            show_info 'Setting up automount & autofs ...'
            if [ ! -d "/etc/auto.master.d" ]; then
                mkdir -p /etc/auto.master.d
            fi
            echo -e "/home /etc/auto.home --timeout 3600\n" | $SUDOCMD tee -a /etc/auto.master.d/home.autofs
            echo -e "/- /etc/auto.cosmo --timeout 3600\n" | $SUDOCMD tee -a /etc/auto.master.d/cosmo.autofs
            # Check if the line including the auto.master.d directory is present; otherwise, append
            if grep -E "^#\+dir.*" /etc/auto.master; then
                $SUDOCMD sed -i -e 's/^#\(+dir.*\)/\1/' /etc/auto.master
            else
                echo -e "+dir:/etc/auto.master.d\n" | $SUDOCMD tee -a /etc/auto.master
            fi
            # There is an error if the rule '+auto.master' is present
            if grep "^+auto.master" /etc/auto.master; then
                show_info "Commenting out '+auto.master' otherwise will cause problems"
                sed -i -e 's/^\(+auto.*\)/#\1/' /etc/auto.master
            fi
            # Creating map files
            show_info 'Creating map files for home folders and COSMO workspaces'
            echo "/apps -fstype=nfs4,rw,defaults,noatime,proto=tcp,auto,port=2049,nosuid,soft cosmonas1.epfl.ch:/volume1/cosmo-apps" | $SUDOCMD tee /etc/auto.cosmo
            echo "* -fstype=nfs,soft,intr,rsize=8192,wsize=8192,nosuid,tcp sti2files.epfl.ch:/sti_cosmo_1_files_nfs/cosmo-homes/&" | $SUDOCMD tee /etc/auto.home
            #echo "* -fstype=nfs4,rw,defaults,noatime,proto=tcp,auto,port=2049,nosuid,soft cosmonas1.epfl.ch:/volume1/cosmo-homes/&" | $SUDOCMD tee /etc/auto.home
            echo "/workspace -fstype=nfs,soft,intr,rsize=8192,wsize=8192,nosuid,tcp sti2files.epfl.ch:/sti_cosmo_1_files_nfs/workspace" | $SUDOCMD tee -a /etc/auto.cosmo
            #echo "/workspace -fstype=nfs4,rw,defaults,noatime,proto=tcp,auto,port=2049,nosuid,soft cosmonas1.epfl.ch:/volume1/workspace" | $SUDOCMD tee -a /etc/auto.cosmo
            show_success 'Done. AutoFS will start on next reboot.'
            # Permissions on scratch and local home
            show_info 'Changing permissions to local scratch folder and home'
            if [[ -d "/local/scratch" ]]; then
                $SUDOCMD chgrp COSMO-unit /local/scratch
                $SUDOCMD chmod -R 775 /local/scratch
            fi
            if [[ -d "/local/home" ]]; then
                $SUDOCMD chgrp COSMO-unit /local/home
            fi
            show_success 'Configuration done.'
            whiptail --title "Finished" --msgbox "Configuration complete." 8 78
            configure
    else
        clear && main
    fi
}

# Security fixes
function security {
    show_info 'Security fix: disabling LDAP "admin" group to gain root privileges through sudo'
    $SUDOCMD sed -i 's:^\(%admin.*\):#\1:' /etc/sudoers
    show_success 'Done!' && sleep 1
    # Configuring PAM to restrict logins
    show_info 'Configuring PAM to restrict logins (root will be allowed only locally, denied through SSH)'
    $SUDOCMD sed -i 's:^#\(account.*pam_access.so$\):\1:' /etc/pam.d/login /etc/pam.d/sshd
    if grep -vq '^#' /etc/security/access.conf; then
        show_info 'File "access.conf" already modified. Please check that restrictions there are correct!' && sleep 1
    else
        show_info 'Adding restrictions to "access.conf": root can access only locally, access for everyone not belonging to COSMO denied'
        echo -e "-:root:ALL EXCEPT LOCAL\n+:local:LOCAL\n-:ALL EXCEPT (COSMO-unit):ALL" | $SUDOCMD tee -a /etc/security/access.conf
    fi
    show_success 'PAM configured!' && sleep 1
    whiptail --title "Finished" --msgbox "Settings changed successfully." 8 78
    configure
}

# Configure System
function configure {
    eval `resize`
    CONF=$(whiptail \
        --notags \
        --title "Configure System" \
        --menu "\nWhat would you like to do?" \
        --cancel-button "Go Back" \
        $LINES $COLUMNS $(( $LINES - 12 )) \
        cosmonas    'Setup remote HOMES and LDAP authentication' \
        security    'Security fixes: (1) LDAP admin group (2) Restrict logins' \
        preferences 'Set preferred application-specific settings' \
        apport      'Disable system crash dialogs' \
        startup     'Show all startup applications' \
        3>&1 1>&2 2>&3)
     
    exitstatus=$?
    if [ $exitstatus = 0 ]; then
        clear && $CONF
    else
        clear && main
    fi
}
