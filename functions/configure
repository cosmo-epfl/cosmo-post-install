#!/bin/bash

dir="$(dirname "$0")"
COSMOUTILS="$dir/data/cosmonas.list"

# Preferred settings
function preferences {
    # Pantheon Settings
    show_info 'Setting Pantheon app preferences...'
    gsettings set org.pantheon.noise.settings update-folder-heirarchy false
    gsettings set org.pantheon.terminal.settings natural-copy-paste false
    # GNOME Preferences
    show_info 'Setting GNOME app preferences...'
    gsettings set org.gnome.desktop.interface clock-format 12h
    gsettings set org.gnome.desktop.interface clock-show-date true
    gsettings set org.gnome.nautilus.preferences sort-directories-first true
    gsettings set org.gtk.Settings.Debug enable-inspector-keybinding true
    # Done
    show_success 'Done.'
    whiptail --title "Finished" --msgbox "Settings changed successfully." 8 78
    configure
}

# Show start-up applications
function startup {
    show_info 'Changing display of startup applications...'
    show_warning 'Requires root privileges'
    $SUDOCMD sed -i "s/NoDisplay=true/NoDisplay=false/g" /etc/xdg/autostart/*.desktop
    # Done
    show_success 'Done.'
    whiptail --title "Finished" --msgbox "Settings changed successfully." 8 78
    configure
}

# Disable Apport
function apport {
    show_info 'Disabling apport crash dialogs...'
    show_warning 'Requires root privileges'
    $SUDOCMD sed -i "s/enabled=1/enabled=0/g" /etc/default/apport
    # Done
    show_success 'Done.'
    whiptail --title "Finished" --msgbox "Settings changed successfully." 8 78
    configure
}

# Setup shared home on the COSMO nas
function cosmonas {
    if (eval `resize` && whiptail --title \
        "Setup of remote HOMES and LDAP authentication" --yesno \
        "List of applications needed for this operation: \n\n$(cat $COSMOUTILS) \n\nProceed?" \
        $LINES $COLUMNS $(( $LINES - 12 )) \
        --scrolltext ) then
    show_info 'Installing... This will trigger an interactive setup of LDAP and Kerberos.'
    show_warning 'Requires root privileges'
    $SUDOCMD apt-get install -y --no-install-recommends $(cat $COSMOUTILS)
    show_success 'Installation done.'
    show_info 'Setting up LDAP auth files...'
    show_warning 'Requires root privileges'
    # File '/etc/ntp.conf'
    show_info 'File "ntp.conf"'
    echo "server 128.178.23.1" | $SUDOCMD tee -a /etc/ntp.conf
    # File '/etc/ldap.conf'
    show_info 'Configuring file "ldap.conf"'
    echo -e "timelimit 30\nbind_timelimit 30\nidle_timelimit 1200\nbind_policy soft\n nss_initgroups backlink\nnss_map_attribute uniqueMember memberUid\n" | $SUDOCMD tee -a /etc/ldap.conf
    IGNORE=`awk -F: '{printf ("%s,",$1)}' /etc/passwd`
    echo "nss_initgroups_ignoreusers ${IGNORE%,}" | $SUDOCMD tee -a /etc/ldap.conf
    # File '/etc/nsswitch.conf'
    show_info 'File "nsswitch.conf"'
    $SUDOCMD sed -i 's/compat/files ldap/' /etc/nsswitch.conf
    echo -e "automount: files\n" | $SUDOCMD tee -a /etc/nsswitch.conf
    # File '/etc/idmapd.conf'
    show_info 'File "idmapd.conf"'
    echo -e "Domain = INTRANET\nLocal-Realms = epfl@INTRANET,epfl,epfl.ch\n" | $SUDOCMD tee -a /etc/idmapd.conf
    # File '/etc/nslcd.conf'
    show_info 'Configure nscd daemon'
    echo -e "bind_timelimit 30\ntimelimit 30\nidle_timelimit 1200" | $SUDOCMD tee -a /etc/nslcd.conf
    $SUDOCMD service nscd restart
    # Enabling login from other users
    show_info 'Enabling login from other users'
    echo -e "[SeatDefaults]\ngreeter-show-manual-login=true\ngreeter-hide-users=true" | $SUDOCMD tee /etc/lightdm/lightdm.conf
    # Done with LDAP
    show_success 'Done with LDAP.'

    # Setup autofs
    show_info 'Setting up automount & autofs ...'
    echo "/home auto.home --timeout 3600" | $SUDOCMD tee -a /etc/auto.master
    echo "/- auto.cosmo --timeout 3600" | $SUDOCMD tee -a /etc/auto.master
    # Creating map files
    show_info 'Creating map files for home folders and COSMO workspaces'
    echo "* -fstype=nfs4,rw,defaults,noatime,proto=tcp,auto,port=2049,nosuid,soft cosmonas1.epfl.ch:/volume1/cosmo-homes/&" | $SUDOCMD tee /etc/auto.home
    echo "/apps -fstype=nfs4,rw,defaults,noatime,proto=tcp,auto,port=2049,nosuid,soft cosmonas1.epfl.ch:/volume1/cosmo-apps" | $SUDOCMD tee /etc/auto.cosmo
    echo "/workspace -fstype=nfs4,rw,defaults,noatime,proto=tcp,auto,port=2049,nosuid,soft cosmonas1.epfl.ch:/volume1/workspace" | $SUDOCMD tee -a /etc/auto.cosmo
    show_success 'Done. Autofs will start on next reboot.'
    # Permissions on scratch and local home
    show_info 'Changing permissions to local scratch folder and home'
    if [[ -d "/local/scratch" ]]; then
        $SUDOCMD chgrp cosmo /local/scratch
        $SUDOCMD chmod 775 /local/scratch
    fi
    if [[ -d "/local/home" ]]; then
        $SUDOCMD chgrp cosmo /local/home
    fi
    show_success 'Configuration done.'
    whiptail --title "Finished" --msgbox "Configuration complete." 8 78
    configure
    else
        clear && main
    fi
}

# Security fixes
function security {
    show_info 'Security fix: disabling LDAP "admin" group to gain root privileges'
    $SUDOCMD sed -i 's/\(^%admin.*\)/#\1/' /etc/sudoers
    show_success 'Done!' && sleep 2
    # Configuring PAM to restrict logins
    show_info 'Configuring PAM to restrict logins (root allowed only locally, denied through SSH)'
    echo "auth required pam_access.so" | $SUDOCMD tee -a /etc/pam.d/common-auth
    echo -e "+:local:LOCAL\n-:root:ALL EXCEPT LOCAL\n-:ALL EXCEPT (cosmo) tocci cliang:ALL" | $SUDOCMD tee -a /etc/security/access.conf
    show_success 'PAM configured!' && sleep 2
    whiptail --title "Finished" --msgbox "Settings changed successfully." 8 78
    configure
}

# Configure System
function configure {
    eval `resize`
    CONF=$(whiptail \
        --notags \
        --title "Configure System" \
        --menu "\nWhat would you like to do?" \
        --cancel-button "Go Back" \
        $LINES $COLUMNS $(( $LINES - 12 )) \
        cosmonas    'Setup remote HOMES and LDAP authentication' \
        security    'Security fixes: (1) LDAP admin group (2) Restrict logins' \
        preferences 'Set preferred application-specific settings' \
        apport      'Disable system crash dialogs' \
        startup     'Show all startup applications' \
        3>&1 1>&2 2>&3)
     
    exitstatus=$?
    if [ $exitstatus = 0 ]; then
        clear && $CONF
    else
        clear && main
    fi
}
